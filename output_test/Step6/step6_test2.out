



;IR code
;PUSH   
;PUSHREGS   
;JSR FUNC_main  
;HALT   
;LABEL FUNC_F  
;LINK 2  
;STOREI 2 !T0 
;LEI $2 !T0 ELSE_1
;STOREI 1 !T2 
;SUBI $2 !T2 !T1
;PUSH   
;PUSHREGS   
;PUSH !T1  
;JSR FUNC_F  
;POP   
;POPREGS   
;POP !T3  
;STOREI !T3 !T4 
;STOREI !T4 $-1 
;STOREI 2 !T6 
;SUBI $2 !T6 !T5
;PUSH   
;PUSHREGS   
;PUSH !T5  
;JSR FUNC_F  
;POP   
;POPREGS   
;POP !T7  
;STOREI !T7 !T8 
;STOREI !T8 $-2 
;ADDI $-1 $-2 !T9
;STOREI !T9 $7 
;UNLINK   
;RET   
;JUMP END_IF_ELSE1  
;LABEL ELSE_1  
;STOREI 0 !T10 
;NEI $2 !T10 ELSE_2
;STOREI 0 !T11 
;STOREI !T11 $7 
;UNLINK   
;RET   
;JUMP END_IF_ELSE2  
;LABEL ELSE_2  
;STOREI 1 !T12 
;NEI $2 !T12 ELSE_3
;STOREI 1 !T13 
;STOREI !T13 $7 
;UNLINK   
;RET   
;JUMP END_IF_ELSE3  
;LABEL ELSE_3  
;STOREI 1 !T14 
;STOREI !T14 $7 
;UNLINK   
;RET   
;LABEL END_IF_ELSE3  
;LABEL END_IF_ELSE2  
;LABEL END_IF_ELSE1  
;UNLINK   
;RET   
;LABEL FUNC_main  
;LINK 3  
;WRITES input  
;READI $-2  
;STOREI 0 !T15 
;STOREI !T15 !T16 
;STOREI !T16 $-1 
;LABEL WHILE_LOOP_START_4  
;STOREI $-2 !T17 
;EQI $-1 !T17 WHILE_LOOP_END_4
;PUSH   
;PUSHREGS   
;PUSH $-1  
;JSR FUNC_F  
;POP   
;POPREGS   
;POP !T18  
;STOREI !T18 !T19 
;STOREI !T19 $-3 
;WRITEI $-1  
;WRITES space  
;WRITEI $-3  
;WRITES eol  
;STOREI 1 !T21 
;ADDI $-1 !T21 !T20
;STOREI !T20 !T22 
;STOREI !T22 $-1 
;JUMP WHILE_LOOP_START_4  
;LABEL WHILE_LOOP_END_4  
;UNLINK   
;RET   
;UNLINK   
;RET   
str input "Please input an integer number: "
str space " "
str eol "\n"
push  
push r0
push r1
push r2
push r3
jsr  FUNC_main
sys halt
label  FUNC_F
link  2
move 2 r0
cmpi  $2 r0
jle  ELSE_1
move 1 r2
move $2 r1
subi r2 r1
push  
push r0
push r1
push r2
push r3
push  r1
jsr  FUNC_F
pop  
pop r3
pop r2
pop r1
pop r0
pop  r3
move r3 r4
move r4 $-1
move 2 r6
move $2 r5
subi r6 r5
push  
push r0
push r1
push r2
push r3
push  r5
jsr  FUNC_F
pop  
pop r3
pop r2
pop r1
pop r0
pop  r7
move r7 r8
move r8 $-2
move $-1 r9
addi $-2 r9
move r9 $7
unlnk
ret
jmp  END_IF_ELSE1
label  ELSE_1
move 0 r10
cmpi  $2 r10
jne  ELSE_2
move 0 r11
move r11 $7
unlnk
ret
jmp  END_IF_ELSE2
label  ELSE_2
move 1 r12
cmpi  $2 r12
jne  ELSE_3
move 1 r13
move r13 $7
unlnk
ret
jmp  END_IF_ELSE3
label  ELSE_3
move 1 r14
move r14 $7
unlnk
ret
label  END_IF_ELSE3
label  END_IF_ELSE2
label  END_IF_ELSE1
unlnk
ret
label  FUNC_main
link  3
sys writes input 
sys readi $-2 
move 0 r15
move r15 r16
move r16 $-1
label  WHILE_LOOP_START_4
move $-2 r17
cmpi  $-1 r17
jeq  WHILE_LOOP_END_4
push  
push r0
push r1
push r2
push r3
push  $-1
jsr  FUNC_F
pop  
pop r3
pop r2
pop r1
pop r0
pop  r18
move r18 r19
move r19 $-3
sys writei $-1 
sys writes space 
sys writei $-3 
sys writes eol 
move 1 r21
move $-1 r20
addi r21 r20
move r20 r22
move r22 $-1
jmp  WHILE_LOOP_START_4
label  WHILE_LOOP_END_4
unlnk
ret
unlnk
ret
